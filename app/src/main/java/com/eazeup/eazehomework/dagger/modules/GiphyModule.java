package com.eazeup.eazehomework.dagger.modules;

import com.eazeup.eazehomework.api.GiphyApiInteface;
import com.eazeup.eazehomework.api.NetworkManager;

import javax.inject.Named;
import javax.inject.Singleton;

import dagger.Module;
import dagger.Provides;
import retrofit2.Retrofit;

/**
 * Module used specifically for talking to Giphy's endpoint.
 *
 * It would be very easy to swap out with a mock module in unit tests, or UI tests
 */
@Module
public class GiphyModule {

    public static final String NAMED_GIPHY_KEY = "apiKey";

    final String mGiphyKey;

    public GiphyModule(String token) {
        mGiphyKey = token;
    }

    @Provides
    @Named(NAMED_GIPHY_KEY)
    public String provideApiKey() {
        return mGiphyKey;
    }

    /**
     * The Giphy Api Interface that our app will use.
     *
     * @param retrofit - the underlying {@link Retrofit} instance that this interface will use (auto-generated by retrofit)
     * @return
     */
    @Provides
    @Singleton
    public GiphyApiInteface providesGiphyInterface(Retrofit retrofit) {
        return retrofit.create(GiphyApiInteface.class);
    }

    /**
     * Provides an instance of our NetworkManager to our app.
     *
     * @param apiInteface
     * @return
     */
    @Provides
    @Singleton
    public NetworkManager providesNetworkManager(GiphyApiInteface apiInteface) {
        return new NetworkManager(apiInteface);
    }
}
